service: fm-transaction

app: fm-transaction
org: igorpestana

frameworkVersion: '3'

provider:
  name: aws
  region: us-east-1
  runtime: go1.x
  environment:
    ENVIRONMENT: ${opt:stage, self:provider.stage}
    DYNAMODB_TRANSACTION_TABLE: fm-transaction-table-${opt:stage, self:provider.stage}
    DYNAMODB_CATEGORY_TABLE: fm-category-table-${opt:stage, self:provider.stage}
    DYNAMODB_TRANSACTION_REGION: us-east-1
    DYNAMODB_TRANSACTION_ENDPOINT: ${self:service}-${opt:stage, self:provider.stage}
    AUTH0_DOMAIN: dev-kovicniqndmbavnk.us.auth0.com
    AUTH0_AUDIENCE: FinancialManagerAPI
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/fm-*"

functions:
  auth:
    handler: bin/auth
    package:
      include:
        - ./bin/create-transaction

  create-transaction:
    handler: bin/create-transaction
    package:
      include:
        - ./bin/create-transaction
    events:
      - http:
          path: transactions
          method: post
          authorizer: auth
          cors: true

  list-transactions:
    handler: bin/list-transactions
    package:
      include:
        - ./bin/list-transactions
    events:
      - http:
          path: transactions
          method: get
          authorizer: auth
          cors: true

  report-transactions:
    handler: bin/report-transactions
    package:
      include:
        - ./bin/report-transactions
    events:
      - http:
          path: report
          method: get
          authorizer: auth
          cors: true

  create-category:
    handler: bin/create-category
    package:
      include:
        - ./bin/create-category
    events:
      - http:
          path: categories
          method: post
          authorizer: auth
          cors: true

  list-category:
    handler: bin/list-categories
    package:
      include:
        - ./bin/list-categories
    events:
      - http:
          path: categories
          method: get
          authorizer: auth
          cors: true
  
  order-category:
    handler: bin/order-categories
    package:
      include:
        - ./bin/order-categories
    events:
      - http:
          path: categories/order
          method: put
          authorizer: auth
          cors: true
resources:
  Resources:
    FmTransactionDynamoTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: MonthYear
            AttributeType: S
          -
            AttributeName: CategoryTransactionId
            AttributeType: S
        KeySchema:
          -
            AttributeName: MonthYear
            KeyType: HASH
          -
            AttributeName: CategoryTransactionId
            KeyType: RANGE
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TRANSACTION_TABLE}
    FmCategoryDynamoTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: Name
            AttributeType: S
          -
            AttributeName: Priority
            AttributeType: N
        KeySchema:
          -
            AttributeName: Name
            KeyType: HASH
          -
            AttributeName: Priority
            KeyType: RANGE
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_CATEGORY_TABLE}